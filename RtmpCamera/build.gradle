plugins {
    id 'com.android.application'
}

static def getCreateTime() {
    def createTime = new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08:00")).trim()
    return createTime
}

static def getGitSHA() {
    def gitSHA = 'git rev-parse --short HEAD'.execute().text.trim()
    return gitSHA
}

static def getGitCommitCount() {
    def gitCommitCount = 'git rev-list --count HEAD'.execute().text.trim();
    return gitCommitCount;
}

android {
    compileSdkVersion 28
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.flyzebra.rtmpcamera"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode gitCommitCount.toInteger()
        versionName "v1.0."+gitSHA+"."+createTime

        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
                abiFilters "arm64-v8a", "armeabi-v7a"
            }
        }

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"
        }
    }

    signingConfigs {
        release {
            storeFile file("../keystore/vlte.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        debug {
            storeFile file("../keystore/vlte.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        release {
            minifyEnabled true //混淆
            zipAlignEnabled true//Zipalign优化
            shrinkResources true// 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName
            if (variant.buildType.name.equals('release')) {
                fileName = "${applicationId}_release_${versionName}_${gitCommitCount}.apk"
            } else if (variant.buildType.name.equals('debug')) {
                fileName = "${applicationId}_debug_${versionName}_${gitCommitCount}.apk"
            }
            outputFileName = fileName;
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation project(path: ':rtmplib')
    implementation project(path: ':yuvlib')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}